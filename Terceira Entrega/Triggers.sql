-- TRIGGER DATA REGISTO
CREATE OR REPLACE FUNCTION set_data_registo()
RETURNS TRIGGER AS $$
BEGIN
    NEW.DATA_REGISTO := date_trunc('second', CURRENT_TIMESTAMP);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE TRIGGER trigger_set_data_registo
BEFORE INSERT ON UTILIZADORES
FOR EACH ROW
EXECUTE FUNCTION set_data_registo();


-- TRIGGER VALIDAR EMAIL
CREATE OR REPLACE FUNCTION validar_email_unico()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM UTILIZADORES WHERE EMAIL = NEW.EMAIL) THEN
        RAISE EXCEPTION 'Email já existe!';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER trigger_validar_email_unico
BEFORE INSERT ON UTILIZADORES
FOR EACH ROW
EXECUTE FUNCTION validar_email_unico();



-- FUNCTION EXCLUSÃO USER
CREATE OR REPLACE FUNCTION excluir_utilizador_cascata()
RETURNS TRIGGER AS $$
BEGIN
    DELETE FROM ADMINISTRADORES WHERE ID_UTILIZADOR = OLD.ID_UTILIZADOR;
    
    -- Substituir o palestrante
    UPDATE EVENTOS
    SET ID_UTILIZADOR = 0
    WHERE ID_UTILIZADOR = OLD.ID_UTILIZADOR;

    DELETE FROM PALESTRANTES WHERE ID_UTILIZADOR = OLD.ID_UTILIZADOR;

    DELETE FROM INSCRICOES WHERE ID_UTILIZADOR = OLD.ID_UTILIZADOR;
    DELETE FROM PAGAMENTOS WHERE ID_INSCRICAO IN (SELECT ID_INSCRICAO FROM INSCRICOES WHERE ID_UTILIZADOR = OLD.ID_UTILIZADOR);
    DELETE FROM DESPESAS WHERE ID_UTILIZADOR = OLD.ID_UTILIZADOR;

    RETURN OLD;
END;
$$ LANGUAGE plpgsql;

-- TRIGGER EXCLUSÃO USER
CREATE OR REPLACE TRIGGER trigger_excluir_utilizador_cascata
BEFORE DELETE ON UTILIZADORES
FOR EACH ROW
EXECUTE FUNCTION excluir_utilizador_cascata();



-- FUNCTION EXCLUSÃO EVENTOS
CREATE OR REPLACE FUNCTION excluir_evento_cascata()
RETURNS TRIGGER AS $$
BEGIN
    DELETE FROM DESPESAS WHERE ID_EVENTO = OLD.ID_EVENTO;
	DELETE FROM PAGAMENTOS WHERE ID_EVENTO = OLD.ID_EVENTO;
    DELETE FROM INSCRICOES WHERE ID_EVENTO = OLD.ID_EVENTO;
        
    RETURN OLD;
END;
$$ LANGUAGE plpgsql;

-- TRIGGER EXCLUSÃO EVENTOS
CREATE OR REPLACE TRIGGER trigger_excluir_evento_cascata
BEFORE DELETE ON EVENTOS
FOR EACH ROW
EXECUTE FUNCTION excluir_evento_cascata();



-- Alterar o proprietário das funções e triggers para bd2admin

-- Trigger DATA REGISTO
ALTER FUNCTION set_data_registo() OWNER TO bd2admin;

-- Trigger VALIDAR EMAIL
ALTER FUNCTION validar_email_unico() OWNER TO bd2admin;

-- Trigger EXCLUSÃO USER
ALTER FUNCTION excluir_utilizador_cascata() OWNER TO bd2admin;

-- Trigger EXCLUSÃO EVENTOS
ALTER FUNCTION excluir_evento_cascata() OWNER TO bd2admin;



